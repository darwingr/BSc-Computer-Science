$> clang++ -fsanitize=address -Wall -Wextra -Wpedantic -std=c++11 -stdlib=libc++ -O3 -o bin/a.out lab01.cpp
$> ./bin/a.out

Question b. Amicable pairs under: 1000
=====================================
1 1
6 6
28 28
220 284
284 220
496 496

Question c. Unique Pairs: 1000
==============================
1 1
6 6
28 28
220 284
496 496

Question d. Faster Amicable:
============================
false for (1000, 1000)
false for (1, 1)
true for (220, 284)
false for (220, 220)

Question f. Fastpairs: 10000
============================
220 284
1184 1210
2620 2924
5020 5564
6232 6368

Question G:
Running performance benchmarks...
================================================================================
1 1
6 6
28 28
220 284
284 220
496 496
1184 1210
1210 1184
2620 2924
2924 2620
1 1
6 6
28 28
220 284
284 220
496 496
1184 1210
1210 1184
2620 2924
2924 2620
5020 5564
5564 5020
6232 6368
6368 6232
8128 8128
1 1
6 6
28 28
220 284
496 496
1184 1210
2620 2924
1 1
6 6
28 28
220 284
496 496
1184 1210
2620 2924
5020 5564
6232 6368
8128 8128
220 284
1184 1210
2620 2924
220 284
1184 1210
2620 2924
5020 5564
6232 6368

================================================================================
Benchmark Complete: 3 procedures X 2 values of n.

Benchmark Results for `b::pairs(n)` :
5000: 276.715 seconds (276715327 μs)
10000: 2207.576 seconds (2207575990 μs)

Benchmark Results for `c::pairs(n)` :
5000: 137.109 seconds (137108847 μs)
10000: 1079.474 seconds (1079474382 μs)

Benchmark Results for `f::fastpairs(n)` :
5000: 1.336 seconds (1335810 μs)
10000: 7.467 seconds (7467496 μs)

